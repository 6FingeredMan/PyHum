PyHum

INFO:
Python/Cython scripts to read Humminbird DAT and associated SON files, export data, carry out rudimentary radiometric corrections to data, and classify bed texture using the algorithm detailed in Buscombe, Grams, Smith, "Automated riverbed sediment classification using low-cost sidescan sonar", submitted to Journal of Hydraulic Engineering, Sept 2014

Author:    Daniel Buscombe
           Grand Canyon Monitoring and Research Center
           United States Geological Survey
           Flagstaff, AZ 86001
           dbuscombe@usgs.gov
Version: 1.0      Revision: September, 2014

For latest code version please visit:
https://github.com/dbuscombe-usgs

====================================
   This function is part of PyHum software
   This software is in the public domain because it contains materials that originally came 
   from the United States Geological Survey, an agency of the United States Department of Interior. 
   For more information, see the official USGS copyright policy at 
   http://www.usgs.gov/visual-id/credit_usgs.html#copyright

Any use of trade, product, or firm names is for descriptive purposes only and does not imply endorsement by the U.S. government. 
====================================

++++++++++++++++++++++++++++++++++++++++++++++++++++
Python scripts:

./pyhum_read.py =  python program to run
./pyhum_correct.py =  python program to run
./pyhum_texture.py =  python program to run

./pyhum_utils.py = python subfunctions

++++++++++++++++++++++++++++++++++++++++++++++++++++
Cython modules for compilation:

./pyread.pyx = program for reading binary Humminbird data
./ppdrc.pyx = program for Phase Preserving Tone Mapping of Non-Photographic High Dynamic Range Images
./cwt.pyx = program for Morlet wavelet computations
./replace_nans.pyx = program for replacing nans using kernel methods
./spec_noise.pyx = program for padding data with spectral noise to eliminate edge effects in spectral processing

(when compiled, these programs create a number of files with .c, .so, and .o extensions. These are cython c-code, object and static objects and need to remain in the same folder as the .py and .pyx files)

++++++++++++++++++++++++++++++++++++++++++++++++++++
Shell scripts:
./compile_pyhum.sh = bash script for compiling cython modules (a note for Windows users: use distutils to compile cython modules)
./run_example.sh = bash script (a note for Windows users: you need to translate to a batch .bat script equivalent for DOS or Python terminal prompts)

++++++++++++++++++++++++++++++++++++++++++++++++++++
Test data:

./test.DAT = some test data header

./PyHum/test_data/B000.IDX 
./PyHum/test_data/B000.SON
./PyHum/test_data/B001.IDX
./PyHum/test_data/B001.SON
./PyHum/test_data/B002.IDX
./PyHum/test_data/B002.SON
./PyHum/test_data/B003.IDX
./PyHum/test_data/B003.SON


